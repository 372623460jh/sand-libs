"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _unistUtilVisit() {
  const data = _interopRequireDefault(require("unist-util-visit"));

  _unistUtilVisit = function _unistUtilVisit() {
    return data;
  };

  return data;
}

function _hastUtilToString() {
  const data = _interopRequireDefault(require("hast-util-to-string"));

  _hastUtilToString = function _hastUtilToString() {
    return data;
  };

  return data;
}

function _hastUtilHasProperty() {
  const data = _interopRequireDefault(require("hast-util-has-property"));

  _hastUtilHasProperty = function _hastUtilHasProperty() {
    return data;
  };

  return data;
}

function _hastUtilIsElement() {
  const data = _interopRequireDefault(require("hast-util-is-element"));

  _hastUtilIsElement = function _hastUtilIsElement() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const headings = ['h1', 'h2', 'h3', 'h4', 'h5'];

function excludeComponentFromChildren(children) {
  const rawStack = [];
  return children.filter(item => {
    if (item.type === 'raw') {
      // ignore self-closing raw node, like <img />
      if (/^<[A-Z][^\/]+>$/.test(item.value)) {
        rawStack.push(item.value);
      } else if (/^<\/[A-Z]/.test(item.value)) {
        rawStack.pop();
      }

      return false;
    } // discard children if it was wrapped by built-in Component


    return !rawStack.length;
  });
}

var _default = () => (ast, vFile) => {
  // initial slugs meta
  vFile.data.slugs = [];
  (0, _unistUtilVisit().default)(ast, 'element', node => {
    if ((0, _hastUtilIsElement().default)(node, headings) && (0, _hastUtilHasProperty().default)(node, 'id')) {
      var _ref;

      const title = (0, _hastUtilToString().default)({
        children: excludeComponentFromChildren(node.children),
        value: node.value
      });
      vFile.data.slugs.push({
        depth: parseInt(node.tagName[1], 10),
        value: title,
        heading: (_ref = node.properties) === null || _ref === void 0 ? void 0 : _ref.id
      });

      if (!vFile.data.title) {
        vFile.data.title = title;
      }
    }
  });
};

exports.default = _default;