"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scrollToSlug = scrollToSlug;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _umi = require("umi");

var _context = _interopRequireDefault(require("./context"));

require("./SlugList.less");

var _getGotoPathName = _interopRequireDefault(require("../../utils/getGotoPathName"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function scrollToSlug(slug) {
  var title = document.getElementById(slug);

  if (title) {
    document.documentElement.scrollTop = title.offsetTop - 100;
  }

  return Boolean(title);
}

var SlugsList = function SlugsList(_ref) {
  var className = _ref.className,
      slugs = _ref.slugs,
      base = _ref.base,
      location = _ref.location;

  var _useContext = (0, _react.useContext)(_context.default),
      currentSlug = _useContext.slug;

  var listElm = (0, _react.useRef)(null);

  function handleAnchorClick(ev, id) {
    var _listElm$current, _listElm$current$offs;

    if (scrollToSlug(id) && ((_listElm$current = listElm.current) === null || _listElm$current === void 0 ? void 0 : (_listElm$current$offs = _listElm$current.offsetParent) === null || _listElm$current$offs === void 0 ? void 0 : _listElm$current$offs.scrollTop) < ev.target.offsetTop) {
      listElm.current.offsetParent.scrollTop = ev.target.offsetTop;
    }
  }

  return /*#__PURE__*/_react.default.createElement("ul", {
    className: className,
    role: "slug-list",
    ref: listElm
  }, slugs.filter(function (_ref2) {
    var depth = _ref2.depth;
    return depth > 1 && depth < 4;
  }).map(function (slug) {
    return /*#__PURE__*/_react.default.createElement("li", {
      key: slug.heading,
      title: slug.value,
      "data-depth": slug.depth,
      className: currentSlug === slug.heading ? 'active' : '',
      onClick: function onClick(ev) {
        return handleAnchorClick(ev, slug.heading);
      }
    }, /*#__PURE__*/_react.default.createElement(_umi.Link, {
      to: (0, _getGotoPathName.default)(base, slug.heading, location)
    }, /*#__PURE__*/_react.default.createElement("span", null, slug.value)));
  }));
};

var _default = SlugsList;
exports.default = _default;