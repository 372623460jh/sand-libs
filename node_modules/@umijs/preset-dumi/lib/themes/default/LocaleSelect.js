"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _umi = require("umi");

var _context = _interopRequireDefault(require("./context"));

require("./LocaleSelect.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var LocaleSelect = function LocaleSelect() {
  var _useContext = (0, _react.useContext)(_context.default),
      locales = _useContext.locales,
      locale = _useContext.locale;

  var firstDiffLocale = locales.find(function (_ref) {
    var name = _ref.name;
    return name !== locale;
  });

  function handleLocaleChange(ev) {
    var newPathname = _umi.history.location.pathname.replace("/".concat(locale), ''); // append locale prefix to path if it is not the default locale


    if (ev.target.value !== locales[0].name) {
      newPathname = "/".concat(ev.target.value).concat(newPathname).replace(/\/$/, '');
    }

    _umi.history.push(newPathname);
  }

  return Boolean(locales.length) && /*#__PURE__*/_react.default.createElement("div", {
    className: "__dumi-default-locale-select",
    "data-locale-count": locales.length
  }, locales.length > 2 ? /*#__PURE__*/_react.default.createElement("select", {
    value: locale,
    onChange: handleLocaleChange
  }, locales.map(function (locale) {
    return /*#__PURE__*/_react.default.createElement("option", {
      value: locale.name,
      key: locale.name
    }, locale.label);
  })) : /*#__PURE__*/_react.default.createElement("span", {
    onClick: function onClick() {
      return handleLocaleChange({
        target: {
          value: firstDiffLocale.name
        }
      });
    }
  }, firstDiffLocale.label));
};

var _default = LocaleSelect;
exports.default = _default;