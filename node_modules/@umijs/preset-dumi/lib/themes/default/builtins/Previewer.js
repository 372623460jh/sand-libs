"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _innertext = _interopRequireDefault(require("innertext"));

var _CopyButton = _interopRequireDefault(require("../CopyButton"));

var _SourceCode = _interopRequireDefault(require("./SourceCode"));

var _codesandbox = _interopRequireWildcard(require("../../../utils/codesandbox"));

var _localePropsHoc = _interopRequireDefault(require("../localePropsHoc"));

var _csbButton = _interopRequireDefault(require("../csbButton"));

require("./Previewer.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Previewer = /*#__PURE__*/function (_Component) {
  _inherits(Previewer, _Component);

  var _super = _createSuper(Previewer);

  function Previewer() {
    var _this;

    _classCallCheck(this, Previewer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      showSource: false,
      sourceType: '',
      // data for codesandbox
      CSBData: '',
      showRiddle: false,
      currentFile: ''
    };

    _this.initCSBData = function () {
      var _objectSpread2;

      var _this$props = _this.props,
          source = _this$props.source,
          _this$props$desc = _this$props.desc,
          desc = _this$props$desc === void 0 ? '' : _this$props$desc,
          title = _this$props.title,
          dependencies = _this$props.dependencies,
          files = _this$props.files,
          CSSInDependencies = _this$props.CSSInDependencies;
      var isTSX = Boolean(source.tsx);
      var entryExt = isTSX ? 'tsx' : 'jsx';
      var CSBData = {
        files: _objectSpread((_objectSpread2 = {
          'index.html': {
            content: '<div style="margin: 16px;" id="root"></div>'
          }
        }, _defineProperty(_objectSpread2, "demo.".concat(entryExt), {
          content: source.tsx || source.jsx
        }), _defineProperty(_objectSpread2, "index.".concat(entryExt), {
          content: "import React from 'react';\nimport ReactDOM from 'react-dom';\n".concat((CSSInDependencies || []).map(function (css) {
            return "import '".concat(css, "';");
          }).join('\n'), "\nimport App from './demo';\n\n").concat(_codesandbox.issueLink)
        }), _objectSpread2), files),
        deps: _objectSpread(_objectSpread({}, dependencies), {}, {
          react: '^16.8.0'
        }),
        devDependencies: isTSX ? {
          typescript: '^3.8.0'
        } : {},
        desc: (0, _innertext.default)(desc),
        template: "create-react-app".concat(isTSX ? '-typescript' : ''),
        fileName: "demo.".concat(entryExt)
      };

      _this.setState({
        CSBData: (0, _codesandbox.default)(CSBData, {
          name: title || 'dumi-demo'
        }).parameters
      });
    };

    _this.getSafeEntryCode = function () {
      var _this$props2 = _this.props,
          source = _this$props2.source,
          files = _this$props2.files;
      var result = source.tsx || source.jsx; // to avoid import from '../'

      Object.keys(files).forEach(function (safeName) {
        var file = files[safeName];
        result.replace(file.path, "./".concat(safeName));
      });
      return result;
    };

    _this.convertRiddleJS = function (raw) {
      var dependencies = _this.props.dependencies;
      var result = raw; // convert export default to ReactDOM.render for riddle

      result = result.replace('export default', 'const DumiDemo =').concat('\nReactDOM.render(<DumiDemo />, mountNode);'); // add version for dependencies

      result = result.replace(/(from ')((?:@[^/'"]+)?[^/'"]+)/g, function (_, $1, $2) {
        var dep = "".concat($1).concat($2);

        if (dependencies[$2]) {
          dep += "@".concat(dependencies[$2]);
        }

        return dep;
      });
      return result;
    };

    return _this;
  }

  _createClass(Previewer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props$hideActio,
          _this$props$hideActio2,
          _this2 = this;

      var _this$props3 = this.props,
          source = _this$props3.source,
          _this$props3$defaultS = _this$props3.defaultShowCode,
          defaultShowCode = _this$props3$defaultS === void 0 ? false : _this$props3$defaultS; // init data for codesandbox

      if (!((_this$props$hideActio = this.props.hideActions) === null || _this$props$hideActio === void 0 ? void 0 : _this$props$hideActio.includes('CSB'))) {
        this.initCSBData();
      } // prioritize display tsx


      this.setState({
        sourceType: source.tsx ? 'tsx' : 'jsx',
        showSource: defaultShowCode
      });

      if (!((_this$props$hideActio2 = this.props.hideActions) === null || _this$props$hideActio2 === void 0 ? void 0 : _this$props$hideActio2.includes('RIDDLE'))) {
        // detect network via img request
        var img = document.createElement('img'); // interrupt image pending after 200ms

        setTimeout(function () {
          img.src = '';
        }, 200);

        img.onload = function () {
          _this2.setState({
            showRiddle: true
          });
        };

        img.src = 'https://private-alipayobjects.alipay.com/alipay-rmsdeploy-image/rmsportal/RKuAiriJqrUhyqW.png';
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props$hideActio3,
          _this$props$hideActio4,
          _files$currentFile,
          _this3 = this,
          _files$currentFile2;

      var _this$props4 = this.props,
          children = _this$props4.children,
          source = _this$props4.source,
          title = _this$props4.title,
          desc = _this$props4.desc,
          inline = _this$props4.inline,
          transform = _this$props4.transform,
          background = _this$props4.background,
          compact = _this$props4.compact,
          path = _this$props4.path,
          dependencies = _this$props4.dependencies,
          files = _this$props4.files,
          CSSInDependencies = _this$props4.CSSInDependencies,
          props = _objectWithoutProperties(_this$props4, ["children", "source", "title", "desc", "inline", "transform", "background", "compact", "path", "dependencies", "files", "CSSInDependencies"]);

      var _this$state = this.state,
          showSource = _this$state.showSource,
          sourceType = _this$state.sourceType,
          showRiddle = _this$state.showRiddle,
          currentFile = _this$state.currentFile;
      var raw = source[sourceType];
      var hasExternalFile = Boolean(Object.keys(files).length);
      var sourceFileType = currentFile ? currentFile.match(/\.(\w+)$/)[1] : sourceType; // render directly for inline mode

      if (inline) {
        return children;
      }

      return /*#__PURE__*/_react.default.createElement("div", _extends({}, props, {
        className: ['__dumi-default-previewer', props.className].join(' ')
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: "__dumi-default-previewer-demo",
        style: {
          transform: transform ? 'translate(0, 0)' : undefined,
          padding: compact ? '0' : undefined,
          background: background
        }
      }, children), /*#__PURE__*/_react.default.createElement("div", {
        className: "__dumi-default-previewer-desc",
        title: title // eslint-disable-next-line
        ,
        dangerouslySetInnerHTML: {
          __html: desc
        }
      }), /*#__PURE__*/_react.default.createElement("div", {
        className: "__dumi-default-previewer-actions"
      }, !((_this$props$hideActio3 = this.props.hideActions) === null || _this$props$hideActio3 === void 0 ? void 0 : _this$props$hideActio3.includes('EXTERNAL')) && !hasExternalFile && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_csbButton.default, {
        type: this.props.source.tsx ? 'tsx' : 'jsx',
        base64: this.state.CSBData
      }, /*#__PURE__*/_react.default.createElement("button", {
        className: "__dumi-default-icon",
        role: "codesandbox",
        type: "submit"
      })), showRiddle && /*#__PURE__*/_react.default.createElement("form", {
        action: "//riddle.alibaba-inc.com/riddles/define",
        method: "POST",
        target: "_blank",
        style: {
          display: 'flex'
        }
      }, /*#__PURE__*/_react.default.createElement("button", {
        className: "__dumi-default-icon",
        role: "riddle",
        type: "submit"
      }), /*#__PURE__*/_react.default.createElement("input", {
        type: "hidden",
        name: "data",
        value: JSON.stringify({
          title: title,
          js: this.convertRiddleJS(raw),
          css: (CSSInDependencies || []).map(function (css) {
            return "@import '".concat(css, "';");
          }).join('\n')
        })
      }))), !((_this$props$hideActio4 = this.props.hideActions) === null || _this$props$hideActio4 === void 0 ? void 0 : _this$props$hideActio4.includes('CSB')) && path && /*#__PURE__*/_react.default.createElement("a", {
        target: "_blank",
        rel: "noopener noreferrer",
        href: path
      }, /*#__PURE__*/_react.default.createElement("button", {
        className: "__dumi-default-icon",
        role: "open-demo",
        type: "button"
      })), /*#__PURE__*/_react.default.createElement("span", null), /*#__PURE__*/_react.default.createElement(_CopyButton.default, {
        text: ((_files$currentFile = files[currentFile]) === null || _files$currentFile === void 0 ? void 0 : _files$currentFile.content) || raw
      }), source.tsx && showSource && !hasExternalFile && /*#__PURE__*/_react.default.createElement("button", {
        className: "__dumi-default-icon",
        role: "change-".concat(sourceType),
        type: "button",
        onClick: function onClick() {
          return _this3.setState({
            sourceType: sourceType === 'tsx' ? 'jsx' : 'tsx'
          });
        }
      }), /*#__PURE__*/_react.default.createElement("button", {
        className: "__dumi-default-icon",
        role: "source",
        type: "button",
        onClick: function onClick() {
          return _this3.setState({
            showSource: !showSource
          });
        }
      })), showSource && /*#__PURE__*/_react.default.createElement("div", {
        className: "__dumi-default-previewer-source-wrapper"
      }, hasExternalFile && /*#__PURE__*/_react.default.createElement("ul", {
        className: "__dumi-default-previewer-source-tab"
      }, /*#__PURE__*/_react.default.createElement("li", {
        className: !currentFile ? 'active' : ''
      }, /*#__PURE__*/_react.default.createElement("button", {
        type: "button",
        onClick: function onClick() {
          return _this3.setState({
            currentFile: ''
          });
        }
      }, "index.", sourceType)), Object.keys(files).map(function (fileName) {
        return /*#__PURE__*/_react.default.createElement("li", {
          className: currentFile === fileName ? 'active' : '',
          key: fileName
        }, /*#__PURE__*/_react.default.createElement("button", {
          type: "button",
          onClick: function onClick() {
            return _this3.setState({
              currentFile: fileName
            });
          }
        }, fileName));
      })), /*#__PURE__*/_react.default.createElement("div", {
        className: "__dumi-default-previewer-source"
      }, /*#__PURE__*/_react.default.createElement(_SourceCode.default, {
        code: ((_files$currentFile2 = files[currentFile]) === null || _files$currentFile2 === void 0 ? void 0 : _files$currentFile2.content) || raw,
        lang: sourceFileType,
        showCopy: false
      }))));
    }
  }]);

  return Previewer;
}(_react.Component);

var _default = (0, _localePropsHoc.default)(Previewer);

exports.default = _default;