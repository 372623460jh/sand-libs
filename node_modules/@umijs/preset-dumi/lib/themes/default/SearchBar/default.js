"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _umi = require("umi");

var _react = _interopRequireWildcard(require("react"));

var _SlugList = require("../SlugList");

var _context = _interopRequireDefault(require("../context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var DefaultSearchBar = function DefaultSearchBar(_ref) {
  var routes = _ref.routes;

  var _useContext = (0, _react.useContext)(_context.default),
      locale = _useContext.locale,
      locales = _useContext.locales;

  var _useState = (0, _react.useState)([]),
      _useState2 = _slicedToArray(_useState, 2),
      metas = _useState2[0],
      setMetas = _useState2[1];

  var _useState3 = (0, _react.useState)([]),
      _useState4 = _slicedToArray(_useState3, 2),
      items = _useState4[0],
      setItems = _useState4[1];

  var _useState5 = (0, _react.useState)(''),
      _useState6 = _slicedToArray(_useState5, 2),
      keywords = _useState6[0],
      setKeywords = _useState6[1];

  (0, _react.useEffect)(function () {
    setMetas(routes.filter(function (_ref2) {
      var _locales$;

      var title = _ref2.title,
          meta = _ref2.meta;
      var isValidLocaleRoute = (meta === null || meta === void 0 ? void 0 : meta.locale) === locale;
      var isValidDefaultLocaleRoute = // route locale euqal default locale
      (meta === null || meta === void 0 ? void 0 : meta.locale) === ((_locales$ = locales[0]) === null || _locales$ === void 0 ? void 0 : _locales$.name) || // missing locale and there has no locale or global locale equal default locale
      !(meta === null || meta === void 0 ? void 0 : meta.locale) && (!locales.length || locale === locales[0].name);
      return title && (isValidDefaultLocaleRoute || isValidLocaleRoute);
    }).reduce(function (result, route) {
      var _route$meta, _route$meta2;

      var routeMetaItem = {
        title: route.title,
        path: route.path
      };

      if ((_route$meta = route.meta) === null || _route$meta === void 0 ? void 0 : _route$meta.group) {
        routeMetaItem.parent = route.meta.group;
      }

      result.push(routeMetaItem);
      result.push.apply(result, _toConsumableArray((((_route$meta2 = route.meta) === null || _route$meta2 === void 0 ? void 0 : _route$meta2.slugs) || []).filter(function (_ref3) {
        var value = _ref3.value;
        return value !== route.title;
      }).map(function (slug) {
        return {
          title: slug.value,
          path: "".concat(route.path, "#").concat(slug.heading),
          parent: routeMetaItem
        };
      })));
      return result;
    }, []));
  }, [routes.length, locale]);
  (0, _react.useEffect)(function () {
    var val = keywords.trim().toUpperCase();

    if (val) {
      var result = []; // at least find 5 results

      for (var i = 0; i < metas.length && result.length < 6; i += 1) {
        if (metas[i].title.toUpperCase().indexOf(val) > -1) {
          result.push(metas[i]);
        }
      }

      setItems(result);
    } else {
      setItems([]);
    }
  }, [keywords]);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "__dumi-default-search"
  }, /*#__PURE__*/_react.default.createElement("input", {
    className: "__dumi-default-search-input",
    type: "search",
    value: keywords,
    onChange: function onChange(ev) {
      return setKeywords(ev.target.value);
    }
  }), /*#__PURE__*/_react.default.createElement("ul", null, items.map(function (meta) {
    var _meta$parent;

    return /*#__PURE__*/_react.default.createElement("li", {
      key: meta.path,
      onClick: function onClick() {
        var slug = meta.path.split('#')[1];

        if (slug) {
          (0, _SlugList.scrollToSlug)(slug);
        }

        setKeywords('');
      }
    }, /*#__PURE__*/_react.default.createElement(_umi.Link, {
      to: meta.path
    }, ((_meta$parent = meta.parent) === null || _meta$parent === void 0 ? void 0 : _meta$parent.title) && /*#__PURE__*/_react.default.createElement("span", null, meta.parent.title), meta.title));
  })));
};

var _default = DefaultSearchBar;
exports.default = _default;