"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _umi = require("umi");

var _Navbar = require("./Navbar");

var _LocaleSelect = _interopRequireDefault(require("./LocaleSelect"));

var _context = _interopRequireDefault(require("./context"));

var _SlugList = _interopRequireDefault(require("./SlugList"));

require("./SideMenu.less");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var SideMenu = function SideMenu(_ref) {
  var mobileMenuCollapsed = _ref.mobileMenuCollapsed,
      location = _ref.location;

  var _useContext = (0, _react.useContext)(_context.default),
      logo = _useContext.logo,
      title = _useContext.title,
      desc = _useContext.desc,
      menus = _useContext.menus,
      navs = _useContext.navs,
      repoUrl = _useContext.repoUrl,
      mode = _useContext.mode,
      rootPath = _useContext.rootPath,
      routeMeta = _useContext.routeMeta;

  var isHiddenMenus = Boolean(routeMeta.hero || routeMeta.features || routeMeta.gapless) || routeMeta.sidemenu === false || undefined;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: "__dumi-default-menu",
    "data-mode": mode,
    "data-hidden": isHiddenMenus,
    "data-mobile-show": !mobileMenuCollapsed || undefined
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "__dumi-default-menu-inner"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "__dumi-default-menu-header"
  }, /*#__PURE__*/_react.default.createElement(_umi.Link, {
    to: rootPath,
    className: "__dumi-default-menu-logo",
    style: {
      backgroundImage: logo && "url('".concat(logo, "')")
    }
  }), /*#__PURE__*/_react.default.createElement("h1", null, title), /*#__PURE__*/_react.default.createElement("p", null, desc), /github\.com/.test(repoUrl) && mode === 'doc' && /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement("object", {
    type: "image/svg+xml",
    data: "https://img.shields.io/github/stars".concat(repoUrl.match(/((\/[^\/]+){2})$/)[1], "?style=social")
  }))), navs.length ? /*#__PURE__*/_react.default.createElement("div", {
    className: "__dumi-default-menu-mobile-area"
  }, /*#__PURE__*/_react.default.createElement("ul", {
    className: "__dumi-default-menu-nav-list"
  }, navs.map(function (nav) {
    var _nav$children;

    return /*#__PURE__*/_react.default.createElement("li", {
      key: nav.path || nav.title
    }, /*#__PURE__*/_react.default.createElement(_Navbar.NavbarLink, {
      href: nav.path
    }, nav.title, Boolean((_nav$children = nav.children) === null || _nav$children === void 0 ? void 0 : _nav$children.length) && /*#__PURE__*/_react.default.createElement("ul", null, nav.children.map(function (item) {
      return /*#__PURE__*/_react.default.createElement("li", {
        key: item.path || item.title
      }, /*#__PURE__*/_react.default.createElement(_Navbar.NavbarLink, {
        href: item.path
      }, item.title));
    }))));
  })), /*#__PURE__*/_react.default.createElement(_LocaleSelect.default, null)) : /*#__PURE__*/_react.default.createElement("div", {
    className: "__dumi-default-menu-doc-locale"
  }, /*#__PURE__*/_react.default.createElement(_LocaleSelect.default, null)), /*#__PURE__*/_react.default.createElement("ul", {
    className: "__dumi-default-menu-list"
  }, !isHiddenMenus && menus.map(function (item) {
    var _routeMeta$slugs;

    // always use meta from routes to reduce menu data size
    var hasSlugs = Boolean((_routeMeta$slugs = routeMeta.slugs) === null || _routeMeta$slugs === void 0 ? void 0 : _routeMeta$slugs.length);
    var hasChildren = item.children && Boolean(item.children.length);
    var show1LevelSlugs = routeMeta.toc === 'menu' && !hasChildren && hasSlugs && item.path === location.pathname;
    return /*#__PURE__*/_react.default.createElement("li", {
      key: item.path || item.title
    }, item.path ? /*#__PURE__*/_react.default.createElement(_umi.NavLink, {
      to: item.path,
      exact: !(item.children && item.children.length)
    }, item.title) : /*#__PURE__*/_react.default.createElement("a", null, item.title), Boolean(item.children && item.children.length) && /*#__PURE__*/_react.default.createElement("ul", null, item.children.map(function (child) {
      return /*#__PURE__*/_react.default.createElement("li", {
        key: child.path
      }, /*#__PURE__*/_react.default.createElement(_umi.NavLink, {
        to: child.path,
        exact: true
      }, /*#__PURE__*/_react.default.createElement("span", null, child.title)), Boolean(routeMeta.toc === 'menu' && typeof window !== 'undefined' && child.path === location.pathname && hasSlugs) && /*#__PURE__*/_react.default.createElement(_SlugList.default, {
        base: child.path,
        slugs: routeMeta.slugs,
        location: location
      }));
    })), show1LevelSlugs && /*#__PURE__*/_react.default.createElement(_SlugList.default, {
      base: item.path,
      slugs: routeMeta.slugs,
      location: location
    }));
  }))));
};

var _default = SideMenu;
exports.default = _default;